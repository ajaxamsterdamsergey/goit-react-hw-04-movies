{"version":3,"sources":["Services/api.jsx","pages/Styles/Styles.module.css","pages/MoviesPage.jsx"],"names":["BASE_URL","key","fetchMovies","axios","get","then","data","fetchMoviesId","id","fetchCastId","fetchReviewsId","fetchMoviesQuery","query","module","exports","MoviesPage","state","movies","handleChange","e","setState","target","value","handleSubmit","preventDefault","results","props","history","push","pathname","location","search","this","URLSearchParams","onSubmit","type","onChange","autoComplete","autoFocus","className","moviesPageList","map","movie","to","from","title","Component"],"mappings":"yIAAA,+LACMA,EAAW,gCACXC,EAAM,mCAECC,EAAc,WACzB,OAAOC,IACJC,IADI,UACGJ,EADH,oCACuCC,IAC3CI,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SAEVC,EAAgB,SAAAC,GAC3B,OAAOL,IACJC,IADI,UACGJ,EADH,iBACoBQ,EADpB,oBACkCP,IACtCI,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SAEVG,EAAc,SAAAD,GACzB,OAAOL,IACJC,IADI,UACGJ,EADH,iBACoBQ,EADpB,4BAC0CP,IAC9CI,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SAEVI,EAAiB,SAAAF,GAC5B,OAAOL,IACJC,IADI,UACGJ,EADH,iBACoBQ,EADpB,4BAC0CP,EAD1C,2BAEJI,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SAEVK,EAAmB,SAAAC,GAC9B,OAAOT,IACJC,IADI,UAEAJ,EAFA,gCAEgCC,EAFhC,iCAE4DW,EAF5D,gCAIJP,MAAK,SAAAC,GAAI,OAAIA,EAAKA,U,mBC5BvBO,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,OAAS,uBAAuB,aAAe,6BAA6B,aAAe,6BAA6B,eAAiB,iC,0JCIxMC,E,4MACnBC,MAAQ,CACNJ,MAAO,GACPK,OAAQ,I,EAoBVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZR,MAAOO,EAAEE,OAAOC,S,EAIpBC,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,IAEVZ,EAAU,EAAKI,MAAfJ,MAERD,YAAiBC,GAAOP,MAAK,SAAAC,GAAI,OAC/B,EAAKc,SAAS,CAAEH,OAAQX,EAAKmB,aAG/B,EAAKC,MAAMC,QAAQC,KAAK,CACtBC,SAAU,EAAKH,MAAMI,SAASD,SAC9BE,OAAO,SAAD,OAAWnB,M,kEAjCA,IAAD,OAGlB,GAFqBoB,KAAKN,MAAlBI,SAEKC,OAAQ,CACnB,IAAMnB,EAAQ,IAAIqB,gBAAgBD,KAAKN,MAAMI,SAASC,QAAQ3B,IAC5D,SAEFO,YAAiBC,GAAOP,MAAK,SAAAC,GAAI,OAC/B,EAAKc,SAAS,CAAEH,OAAQX,EAAKmB,aAE/BO,KAAKN,MAAMC,QAAQC,KAAK,CACtBC,SAAUG,KAAKN,MAAMI,SAASD,SAC9BE,OAAO,SAAD,OAAWnB,Q,+BAyBb,IAAD,SACmBoB,KAAKhB,MAAvBJ,EADD,EACCA,MAAOK,EADR,EACQA,OACf,OACE,6BACE,0BAAMiB,SAAUF,KAAKT,cACnB,2BACEY,KAAK,OACLb,MAAOV,EACPwB,SAAUJ,KAAKd,aACfmB,aAAa,MACbC,WAAS,IAGX,4BAAQH,KAAK,UAAb,WAGDlB,GACC,wBAAIsB,UAAWC,kBACZvB,EAAOwB,KAAI,SAAAC,GAAK,OACf,wBAAIzC,IAAKyC,EAAMlC,IAEb,kBAAC,IAAD,CACEmC,GAAI,CACFd,SAAS,WAAD,OAAaa,EAAMlC,IAC3BQ,MAAO,CAAE4B,KAAM,EAAKlB,MAAMI,YAG3BY,EAAMG,iB,GAtEeC","file":"static/js/movies-page.47bd4a2b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst key = \"34fc95322fa082bd00768bf11ed9b6d7\";\r\n\r\nexport const fetchMovies = () => {\r\n  return axios\r\n    .get(`${BASE_URL}trending/all/day?api_key=${key}`)\r\n    .then(data => data.data);\r\n};\r\nexport const fetchMoviesId = id => {\r\n  return axios\r\n    .get(`${BASE_URL}movie/${id}?api_key=${key}`)\r\n    .then(data => data.data);\r\n};\r\nexport const fetchCastId = id => {\r\n  return axios\r\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${key}`)\r\n    .then(data => data.data);\r\n};\r\nexport const fetchReviewsId = id => {\r\n  return axios\r\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${key}&language=en-US&page=1`)\r\n    .then(data => data.data);\r\n};\r\nexport const fetchMoviesQuery = query => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    )\r\n    .then(data => data.data);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Styles_navLink__X1_0s\",\"active\":\"Styles_active__2_-Nx\",\"button\":\"Styles_button__P2SVq\",\"homePageList\":\"Styles_homePageList__2PYXZ\",\"itemHomePage\":\"Styles_itemHomePage__1YL3A\",\"moviesPageList\":\"Styles_moviesPageList__3z1yF\"};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchMoviesQuery } from \"../Services/api\";\r\nimport {moviesPageList} from \"./Styles/Styles.module.css\"\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    movies: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n\r\n    if (location.search) {\r\n      const query = new URLSearchParams(this.props.location.search).get(\r\n        \"query\"\r\n      );\r\n      fetchMoviesQuery(query).then(data =>\r\n        this.setState({ movies: data.results })\r\n      );\r\n      this.props.history.push({\r\n        pathname: this.props.location.pathname,\r\n        search: `query=${query}`\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { query } = this.state;\r\n\r\n    fetchMoviesQuery(query).then(data =>\r\n      this.setState({ movies: data.results })\r\n    );\r\n\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `query=${query}`\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { query, movies } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n          />\r\n\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        {movies && (\r\n          <ul className={moviesPageList}>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                {/* <Link to={`/movies/${movie.id}`}>{movie.title}</Link> */}\r\n                <Link\r\n                  to={{\r\n                    pathname: `/movies/${movie.id}`,\r\n                    state: { from: this.props.location }\r\n                  }}\r\n                >\r\n                  {movie.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}